# Generated by Django 5.0.7 on 2025-01-18 12:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='approved_documents/')),
                ('description', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelevantData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('designation', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='reports/')),
                ('designation', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('trainer_designation', models.CharField(blank=True, choices=[('Artisan', 'Artisan'), ('Agribusiness Practitioner', 'Agribusiness Practitioner')], help_text='Only trainers with this designation can be assigned to this sector.', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('SUPER_USER', 'Super User'), ('ADMINISTRATIVE_USER', 'Admin'), ('SUB_ADMIN', 'Sub Admin'), ('EPICENTER_MANAGER', 'Epicenter Manager'), ('TRAINEE', 'Trainee'), ('TRAINER', 'Trainer'), ('SECTOR_LEAD', 'Sector Lead'), ('DATA_ENTRANT', 'Data Entrant')], default='TRAINEE', max_length=20)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('can_fill_forms', models.BooleanField(default=False, help_text='If True, user can fill trainer/trainee forms')),
                ('can_enroll_trainees', models.BooleanField(default=False, help_text='If True, this user can enroll trainees.')),
                ('can_enroll_trainers', models.BooleanField(default=False, help_text='If True, this user can enroll trainers.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='epicenter_managers', to='urdt_app.district')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sector_leads', to='urdt_app.sector')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date_submitted', models.DateField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('epicenter_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='documents/')),
                ('designation', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='library_docs/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='urdt_app.librarycategory')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NormalReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cohort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cohorts', to='urdt_app.phase')),
            ],
        ),
        migrations.CreateModel(
            name='Requisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approval_stage', models.IntegerField(default=1)),
                ('linked_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requisitions', to='urdt_app.activityreport')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisitions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequisitionApprovalComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('requisition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_comments', to='urdt_app.requisition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occupations', to='urdt_app.sector')),
            ],
        ),
        migrations.CreateModel(
            name='STCForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stc_forms', to='urdt_app.activityreport')),
                ('requisition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stc_forms', to='urdt_app.requisition')),
            ],
        ),
        migrations.CreateModel(
            name='TrainerApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_photo', models.ImageField(blank=True, null=True, upload_to='trainer_photos/')),
                ('name', models.CharField(max_length=255)),
                ('phone_contact', models.CharField(max_length=15)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Divorced', 'Divorced'), ('Married', 'Married'), ('Widowed', 'Widowed')], max_length=20)),
                ('has_smartphone', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('legal_status', models.CharField(blank=True, choices=[('Licensed', 'Licensed'), ('Not Licensed', 'Not Licensed')], max_length=20, null=True)),
                ('account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('household_number', models.CharField(blank=True, max_length=50, null=True)),
                ('zone', models.CharField(blank=True, max_length=50, null=True)),
                ('block_number', models.CharField(blank=True, max_length=50, null=True)),
                ('nationality', models.CharField(choices=[('Ugandan', 'Ugandan'), ('Refugee', 'Refugee')], max_length=50)),
                ('pwd', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('nature_of_disability', models.CharField(blank=True, max_length=255, null=True)),
                ('education_level', models.CharField(choices=[('University', 'University'), ('Tertiary', 'Tertiary'), ('Secondary', 'Secondary'), ('Primary', 'Primary'), ('Not at all', 'Not at all')], max_length=50)),
                ('religion', models.CharField(blank=True, choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Other', 'Other')], max_length=50, null=True)),
                ('other_religion', models.CharField(blank=True, max_length=255, null=True)),
                ('village', models.CharField(blank=True, max_length=255, null=True)),
                ('parish', models.CharField(blank=True, max_length=255, null=True)),
                ('subcounty', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_statement', models.FileField(blank=True, null=True, upload_to='attachments/bank_statements/')),
                ('business_licence', models.FileField(blank=True, null=True, upload_to='attachments/business_licences/')),
                ('national_id', models.FileField(blank=True, null=True, upload_to='attachments/national_ids/')),
                ('recommendation_letter', models.FileField(blank=True, null=True, upload_to='attachments/recommendation_letters/')),
                ('academic_documents', models.FileField(blank=True, null=True, upload_to='attachments/academic_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainers', to='urdt_app.district')),
            ],
        ),
        migrations.CreateModel(
            name='TraineeApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_photo', models.ImageField(upload_to='trainee_photos/')),
                ('training_year_month', models.CharField(max_length=100)),
                ('applicant_name', models.CharField(max_length=255)),
                ('phone_contact', models.CharField(max_length=15)),
                ('phone_ownership', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('age', models.IntegerField()),
                ('marital_status', models.CharField(max_length=20)),
                ('nature_of_disability', models.CharField(blank=True, help_text='Describe the nature of disability, if any.', max_length=255, null=True)),
                ('pwd', models.BooleanField(default=False, help_text='Is the applicant a person with a disability?')),
                ('household_number', models.CharField(blank=True, help_text='Household number for tracking.', max_length=50, null=True)),
                ('block_number', models.CharField(blank=True, help_text='Block number for the household.', max_length=50, null=True)),
                ('consent_form_obtained', models.BooleanField(default=False, help_text="Has the applicant's consent form been obtained?")),
                ('zone', models.CharField(blank=True, help_text='Zone of residence.', max_length=100, null=True)),
                ('nationality', models.CharField(blank=True, help_text='Nationality of the applicant.', max_length=100, null=True)),
                ('subcounty', models.CharField(blank=True, help_text='Subcounty of the trainee', max_length=255, null=True)),
                ('parish', models.CharField(blank=True, help_text='Parish of the trainee', max_length=255, null=True)),
                ('village', models.CharField(blank=True, help_text='Village of the trainee', max_length=255, null=True)),
                ('has_smartphone', models.BooleanField()),
                ('other_assets', models.TextField(blank=True, null=True)),
                ('household_members_above_15', models.IntegerField()),
                ('meals_per_day', models.CharField(choices=[('Once', 'Once'), ('Twice', 'Twice'), ('Thrice', 'Thrice')], max_length=10)),
                ('internet_access', models.BooleanField()),
                ('online_platform_awareness', models.BooleanField()),
                ('education_level', models.CharField(choices=[('University', 'University'), ('Tertiary', 'Tertiary'), ('Secondary', 'Secondary'), ('Primary', 'Primary'), ('Not at all', 'Not at all')], max_length=50)),
                ('religion', models.CharField(choices=[('Christian', 'Christian'), ('Moslem', 'Moslem'), ('Other', 'Other')], max_length=50)),
                ('employment_status', models.CharField(choices=[('Self-employed', 'Self-employed'), ('Employed', 'Employed'), ('Unemployed', 'Unemployed')], max_length=20)),
                ('monthly_income', models.CharField(choices=[('Below 100,000', 'Below 100,000'), ('100,000 - 299,000', '100,000 - 299,000'), ('300,000 - 500,000', '300,000 - 500,000'), ('Above 500,000', 'Above 500,000')], max_length=20)),
                ('family_role', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Guardian', 'Guardian'), ('Child', 'Child'), ('Other', 'Other')], max_length=50)),
                ('healthcare_access', models.CharField(choices=[('Traditional Herbs', 'Traditional Herbs'), ('Hospital', 'Hospital'), ('Clinic', 'Clinic'), ('Other', 'Other')], max_length=50)),
                ('community_leader', models.BooleanField()),
                ('has_vision', models.BooleanField()),
                ('vision_description', models.TextField(blank=True, null=True)),
                ('mentees', models.TextField()),
                ('artisan_name', models.CharField(max_length=255)),
                ('epicenter_manager_name', models.CharField(max_length=255)),
                ('progress_notes', models.TextField(blank=True, null=True)),
                ('enrollment_date', models.DateField(blank=True, null=True)),
                ('attendance_percentage', models.FloatField(default=0.0)),
                ('completion_status', models.CharField(choices=[('In Progress', 'In Progress'), ('Completed', 'Completed')], default='In Progress', max_length=20)),
                ('assessments_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('dit_assessed', models.BooleanField(default=False, help_text='Has the trainee been DIT-assessed?')),
                ('certificate_status', models.CharField(choices=[('Not Eligible', 'Not Eligible'), ('Eligible', 'Eligible'), ('Certified', 'Certified')], default='Not Eligible', help_text='Certification status for the trainee.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cohort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trainees', to='urdt_app.cohort')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainee_applications', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, help_text='The district to which the trainee belongs', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainees', to='urdt_app.district')),
                ('occupation', models.ForeignKey(help_text='Occupation within the sector', on_delete=django.db.models.deletion.CASCADE, related_name='trainee_occupation', to='urdt_app.occupation')),
                ('sector', models.ForeignKey(help_text="Sector for trainee's placement", on_delete=django.db.models.deletion.CASCADE, related_name='trainee_sector', to='urdt_app.sector')),
                ('assigned_trainer', models.ForeignKey(blank=True, help_text='Trainer assigned to this trainee', limit_choices_to={'district__isnull': False, 'is_active': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainees', to='urdt_app.trainerapplication')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trainer', models.ForeignKey(limit_choices_to={'role': 'TRAINER'}, on_delete=django.db.models.deletion.CASCADE, related_name='training_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_title', models.CharField(max_length=255)),
                ('report_content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trainee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_reports', to='urdt_app.traineeapplication')),
                ('trainer', models.ForeignKey(limit_choices_to={'role': 'TRAINER'}, on_delete=django.db.models.deletion.CASCADE, related_name='training_reports', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='urdt_app.trainingsession')),
            ],
        ),
    ]
